<launch>

  <!-- Launch the camera node -->
  <include file="$(find realsense2_camera)/launch/rs_d435_camera_with_model.launch" />

  <!-- Launch a static transform from camera to camera base for development -->
  <node pkg="tf" type="static_transform_publisher" name="tripod_to_camera" args="0 0 0.10 0 0 0 /tripod_base_link /base_link 10"/>

  <!-- Launch depth-to-PCL node -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />

  <node pkg="nodelet" type="nodelet" name="nodelet1"
        args="load depth_image_proc/point_cloud_xyz nodelet_manager">
    <remap from="camera_info" to="/camera/depth/camera_info"/>
    <remap from="image_rect" to="/camera/depth/image_rect_raw"/>
    <remap from="points" to="/camera/depth/points"/>
  </node>


  <!-- Launch the server node -->
  <node pkg="nn_pose_correction" type="nn_pose_correction_server.py" name="nn_pose_corr_server" output="screen" >
      <param name="pointcloud_topic" value="camera/depth/points" />
  </node>

  <!-- <group ns="philbart">

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hri_bringup)/rviz/hri_demo.rviz"/>
    
        <node pkg="ros_body_recognition" type="body_rec_node" name="body_rec_node" output="screen" >
        <param name="openpose_in_topic" value="/image_view/output" />
        <param name="openpose_out_topic" value="/frame" />
    </node>

    <include file="$(find ros_openpose)/launch/run.launch" >
        <arg name="camera" value="nodepth" />
        <arg name="print" value="true" />
        <arg name="rviz" value="false" />
        <arg name="synchronous" value="false" />
    </include>

  </group> -->

  <!-- <include file="$(find azure_kinect_ros_driver)/launch/driver_with_bodytracking.launch" />  -->

</launch>
